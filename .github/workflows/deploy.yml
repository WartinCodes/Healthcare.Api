name: Deploy to Production

on:
  push:
    branches:
      - develop
      - master

jobs:
  deploy-develop:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t wartincodes/healthcare.api:develop . && \
          docker push wartincodes/healthcare.api:develop

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: |
          ssh-keyscan 52.200.237.4 >> ~/.ssh/known_hosts

      - name: Stop and remove all containers
        run: |
          ssh ubuntu@52.200.237.4 "
          docker stop \$(docker ps -q) && docker rm \$(docker ps -a -q)
          "

      - name: Pull and run Docker container on server
        run: |
          ssh ubuntu@52.200.237.4 "
          docker pull wartincodes/healthcare.api:develop && \
          docker run -d -p 8080:80 -e ASPNETCORE_ENVIRONMENT=Development wartincodes/healthcare.api:develop
          "

  deploy-master:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t wartincodes/healthcare.api:latest . && \
          docker push wartincodes/healthcare.api:latest

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: |
          ssh-keyscan 34.224.196.210 >> ~/.ssh/known_hosts

      - name: Stop and remove all containers
        run: |
          ssh ubuntu@34.224.196.210 "
          containers=$(docker ps -q) && \
          if [ -n "$containers" ]; then docker stop $containers && docker rm $(docker ps -a -q); fi
          "

      - name: Pull and run Docker container on server
        run: |
          ssh ubuntu@34.224.196.210 "
          docker pull wartincodes/healthcare.api:latest && \
          docker run -d -p 8080:80 wartincodes/healthcare.api:latest
          "
